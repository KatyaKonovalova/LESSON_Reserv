class A:
    def print(self):
        print('A')


class B(A):
    def print(self):
        print('B')

    def print(self):  # Выполняется это, т.к. оно заменяет то, что было сверху
        print('B2')


class C(A):
    def print(self):
        print('C')


class D(C, B):  # Ищет сначала внутри этого класса, а затем по порядку указания родителей
    pass


d = D()
d.print()

# MRO - функции и методы ищутся снизу вверх (срабатывает тот метод, который был последним) и
# слева направо
# (сначала ищет внутри самого класса, если не нашел, пошел к первому слева родителю,
# если не нашел, пошел ко второму и т.д.)
